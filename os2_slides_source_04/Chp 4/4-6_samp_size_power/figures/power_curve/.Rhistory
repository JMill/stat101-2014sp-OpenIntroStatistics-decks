fm <- lm(dist ~ speed, data = cars)
confint(fm, parm = "speed")
summary(fm)
?confint
download.file("http://stat.duke.edu/courses/Fall12/sta101.001/projects/eval.Rdata", destfile = "eval.Rdata")
load("eval.Rdata")
a = lm(eval~bty_avg+rank, data = eval)
confint(a, parm="rank")
confint(a)
confint(a, parm="bty_avg")
download.file("http://stat.duke.edu/courses/Fall12/sta101.001/projects/prj2.Rmd", destfile = "prj2.Rmd")
load("~/Desktop/Teaching/Sta 101 - F12/Labs/lab 11/data/acs.RData")
lm(income ~ gender + hrs_worked)
m = lm(income ~ gender + hrs_worked, data = acs)
m = lm(income ~ gender + hrs_work, data = acs)
confint(m)
confint(m, parm = "hrs_work")
q()
4.912 -4.118
(5.05^2*9+6.04^2*9)/(18)
sqrt(30.99205^2/10+ 30.99205^2/10)
sqrt(30.99205/10+ 30.99205/10)
(5.05^2*9+6.04^2*9+4.2*9)/(27)
(1.58^2*9+1.1^2*9+0.66*9)/(27)
sqrt((1.58^2*9+1.1^2*9+0.66*9)/(27))
sqrt(1.38)
d = read.csv("~/Desktop/Open Intro/OISlides_Draft/Chp 5/figures/aldrin/aldrin.csv")
d
s1 = sd(d$alrin[d$depth == "bottom"])
s1 = sd(d$aldrin[d$depth == "bottom"])
s2 = sd(d$aldrin[d$depth == "middepth"])
s3 = sd(d$aldrin[d$depth == "surface"])
(s1^2*9+s2^2*9+s3^2*9)/27
(1.58^2*9+5.05^2*9+0.66^2*9)/27
(1.58^2*9+1.10^2*9+0.66^2*9)/27
q()
22+17
q()
library(openintro)
?openintro
1000/40
1000/30
700/15
1067/30
35*50
q()
34463+7456
34463+7456+5855
34463*.014+ 7456*.021
639.058/41919
(34463*.014+ 7456*.021)/41919
(34463*.014+ 7456*.021)/(34463+ 7456)
34463+ 7456
(34463*.014+ 7456*.021)/(34463+ 7456)
q()
install.packages(c("digest", "evaluate", "formatR", "highlight", "knitr", #
"parser", "plyr", "Rcpp", "stringr"))
q
q()
2500/150
250*(2500/150)
250*(2400/150)
250*(2300/150)
210*(2300/150)
250*(2300/150)
250*(2000/150)
2588/250
150*10.352
library(lme4)
?glmer
q()
installed.packages
installed.packages()
colnames(installed.packages())
names(installed.packages())
installed.packages()[1]
installed.packages()[1,]
installed.packages()[,1]
ip = installed.packages()
names(ip)
str(ip)
ip[1:171]
nrow(ip)
ip[1:nrow(ip)]
ip = installed.packages()
ip[1:nrow(ip)]
60/3.2
q()
install.packages("HSAUR")
library(HSAUR)
heptathlon
round(cor(heptathlon[,-8]),2)   # ignoring "score"
round(cov(heptathlon[,-8]),2)
hep.PC.cor = prcomp(heptathlon[,-8], scale=TRUE)#
hep.PC.cov = prcomp(heptathlon[,-8], scale=FALSE)
hep.scores.cor = predict(hep.PC.cor)#
hep.scores.cov = predict(hep.PC.cov)
par(mfrow = c(2, 1))#
plot(hep.scores.cov[,1],hep.scores.cov[,2],#
xlab="PC 1",ylab="PC 2", pch=NA, main="Covariance")#
text(hep.scores.cov[,1],hep.scores.cov[,2],labels=1:25) #
#
plot(hep.scores.cor[,1],hep.scores.cor[,2],#
xlab="PC 1",ylab="PC 2", pch=NA, main="Correlation")#
text(hep.scores.cor[,1],hep.scores.cor[,2],labels=1:25)
q()
16/25-19/24
q()
3300/11
14*300
11*200
14*200
11/8.5
11/8.5*14
11/8.5*11
q()
48/72
20/72
20/24
20/48
q()
library(openintro)
d = c(rep("wrong,\noverturn", 25),#
rep("wrong,\ndon't overturn", 18),#
rep("not wrong,\noverturn", 4),#
rep("not wrong,\ndon't overturn", 42),#
rep("NA", 11)#
)#
#
barplot(table(d), cex.names = 2, col = COL[1])
par(mar=c(2.11.0,0))#
barplot(table(d), cex.names = 2, col = COL[1], horiz = TRUE)
par(mar=c(2.11.0,0))#
barplot(table(d), cex.names = 2, col = COL[1], horiz = TRUE, las = 1)
par(mar=c(2,11.0,0))#
barplot(table(d), cex.names = 2, col = COL[1], horiz = TRUE, las = 1)
par(mar=c(2,11,0,0))#
barplot(table(d), cex.names = 2, col = COL[1], horiz = TRUE, las = 1)
q()
65*5
38384/7
70*5
33384/5000
q()
download.file("http://www.openintro.org/stat/data/bdims.RData", destfile = "bdims.RData")
load("bdims.RData")
rstudio::viewData(bdims)
hist(bdims$age)
qqnoem(bdims$age)
qqnorm(bdims$age)
qqline(bdims$age)
n = length(bdims$age)
perc = (1:n)/n+1
perc
perc = (1:n)/(n+1)
perc
qnorm(.05)
z = qnorm(perc)
plot(bdims$age ~ z)
plot(perc ~ z)
qqnorm(bdims$age)
plot(bdims$age ~ z)
bdims$age
sort(bdims$age)
x = sort(bdims$age)
n = length(bdims$age)
perc = (1:n)/(n+1)
z = qnorm(perc)
plot(x ~ z)
qqnorm(bdims$age)
plot(x ~ z)
hist(bdims$age)
plot(x ~ z)
hist(bdims$age)
set.seed = sample(bdims$age, 8, replace = FALSE)
set.seed(123)
sample(bdims$age, 8, replace = FALSE)
set.seed(123)
y = sample(bdims$age, 8, replace = FALSE)
x = sort(y)
x
download.file("http://stat.duke.edu/courses/Fall12/sta101.001/projects/eval.Rdata", destfile = "eval.Rdata")
load("eval.Rdata")
rstudio::viewData(eval)
plot(eval$bty_m1lower~eval$bty_m1upper)
plot(eval$bty_m1lower~eval$bty_m2upper)
hist(eval$course_eval)
hist(eval$ceval)
hist(eval$eval)
summary(eval$eval)
plot(eval$eval~eval$cls_perc_eval)
q()
10/0.13
10/.87
100*.9
100*.91
100*.09
25*.35
25*.65
150*.05
150*.95
500*.015
500*(1 -.015)
25*.45
25*.55
100*.9
100*.1
25*.45
25*.55
150*.05
150*.95
500*.015
500*(1 -.015)
q()
?permute
??permute
?choose
factorial(365)/((365^n)*factorial(365-n))
n = 120
factorial(365)/((365^n)*factorial(365-n))
factorial(n)*choose(365,n)/365^n
1-(factorial(n)*choose(365,n)/365^n)
(1/365)*(1/365)
1/365
365-120+1
365-120
k = 120
factorial(k)*choose(365,k)/(365^k)
1 - factorial(k)*choose(365,k)/(365^k)
365-120+1
365-119
k = 121
factorial(k)*choose(365,k)/(365^k)
1-0.262
sqrt(100*.262* 0.738)
26.2-2*4.4
26.2+2*4.4
dbinom(8,10,0.262)
choose(10,8)*.262^8*.738^2
choose(121,2)
install.packages("CARBayes")
library(CARBayes)
vignette()
vignette(package="CARBayes")
library(help=CARBayes)
q()
x=read.table("~/Downloads/04cars/04cars.dat",sep="",as.is=TRUE)
x=read.table("~/Downloads/04cars/04cars.dat",sep="\t",as.is=TRUE)
head(x)
str(x)
x=read.csv("~/Downloads/04cars/04cars.csv")
head(x)
?read.csv
x=read.csv("~/Downloads/04cars/04cars.csv",na.strings = "*")
head(x)
head(x,30)
str(x)
x=read.csv("~/Downloads/04cars/04cars.csv")
str(x)
10 / sqrt(2 * 25)
10 / (sqrt(2) * 5)
Q()
q()
setwd("~/Desktop/Teaching/Sta 101 - S13/Slides/(2) Unit 3/Lec 3/figures/power_curve")
n=1:1000#
power = 1-pnorm(1.65-4*sqrt(n)/25)#
#
i=which.min(abs(power-0.9))#
#
pdf("power_curve1.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1)#
plot(n,power,type='l',lwd=3)#
dev.off()#
#
pdf("power_curve2.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1)#
plot(n,power,type='l',lwd=3)#
abline(h=power[i],col='red',lwd=2)#
dev.off()#
#
pdf("power_curve3.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1)#
plot(n,power,type='l',lwd=3)#
abline(h=power[i],col='red',lwd=2)#
abline(v=i,col='blue',lwd=2)#
dev.off()
i
power(i)
power[i]
pdf("power_curve1.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1, cex.axis = 1.5)#
plot(n,power,type='l',lwd=3)#
dev.off()#
#
pdf("power_curve2.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1, cex.axis = 1.5)#
plot(n,power,type='l',lwd=3)#
abline(h=power[i],col='red',lwd=2)#
dev.off()#
#
pdf("power_curve3.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1, cex.axis = 1.5)#
plot(n,power,type='l',lwd=3)#
abline(h=power[i],col='red',lwd=2)#
abline(v=i,col='blue',lwd=2)#
dev.off()
n=1:1000#
power = 1-pnorm(1.65-4*sqrt(n)/25)#
#
i=which.min(abs(power-0.9))#
#
pdf("power_curve1.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1, cex.axis = 1.5, cex.lab = 1.5)#
plot(n,power,type='l',lwd=3)#
dev.off()#
#
pdf("power_curve2.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1, cex.axis = 1.5, cex.lab = 1.5)#
plot(n,power,type='l',lwd=3)#
abline(h=power[i],col='red',lwd=2)#
dev.off()#
#
pdf("power_curve3.pdf",width=10,height=5)#
par(mar=c(5, 4, 2, 2) + 0.1, cex.axis = 1.5, cex.lab = 1.5)#
plot(n,power,type='l',lwd=3)#
abline(h=power[i],col='red',lwd=2)#
abline(v=i,col='blue',lwd=2)#
dev.off()
q()
